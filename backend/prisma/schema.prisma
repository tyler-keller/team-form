// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Instructor {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  projects Project[]
}

model Project {
  id              Int      @id @default(autoincrement())
  name            String
  description     String
  minTeamSize     Int
  maxTeamSize     Int
  studentEmails   String   // JSON array of student emails
  status          String   @default("active") // active, completed, cancelled
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  instructorId    Int
  instructor      Instructor @relation(fields: [instructorId], references: [id], onDelete: Cascade)
  teams           Team[]
}

model Student {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  major       String?
  year        String?
  skills      String?  // Store as JSON string for SQLite compatibility
  availability String? // Store as JSON string for time blocks
  interests   String?  // Text field for interests
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  teamMemberships TeamMember[]
}

model Team {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  maxMembers  Int      @default(4)
  teamNumber  Int?     // Team number within project (1, 2, 3, etc.)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  projectId   Int?
  project     Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  members     TeamMember[]
}

model TeamMember {
  id       Int @id @default(autoincrement())
  studentId Int
  teamId    Int
  role     String? // e.g., "leader", "member"
  
  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  team    Team    @relation(fields: [teamId], references: [id], onDelete: Cascade)
  
  @@unique([studentId, teamId])
}
